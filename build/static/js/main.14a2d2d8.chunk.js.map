{"version":3,"sources":["Components/firebase.js","Components/monProfil/monProfil.js","Components/connexion/connexion.js","Components/inscription/inscription.js","Components/inscriptionParrainage/inscriptionParrainage.js","Components/mesTips/mesTips.js","Components/modifierMonProfil/modifierMonProfil.js","Components/cardSection/CardSection.js","Components/monAbonnement/checkoutForm.js","Components/monAbonnement/monAbonnement.js","Assets/barreMenu.js","Components/PasswordRenew/PasswordRenew.js","Components/PasswordReset/PasswordReset.js","Assets/footer.js","Components/MesHistoriques/mesHistoriques.js","Components/CagnotteCollective/CagnotteCollective.js","Components/Referent/referent.js","Components/KycDocument/kycDocument.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","storage","Tuto","useState","show","setShow","handleClose","handleShow","Button","className","onClick","Modal","onHide","animation","backdrop","keyboard","Header","closeButton","Title","Body","Footer","variant","Profil","props","abonnement","ID","state","profil","stripeId","console","log","alert","handleInput","e","setState","target","name","value","unSubscribe","headers","Headers","Authorization","localStorage","getItem","fetch","method","then","response","json","responseObject","message","showModal","getMonProfil","error","renderMesHistory","Array","isArray","history","length","map","element","index","key","amount","date","monProfil","deleteAffiliation","options","body","JSON","stringify","getWaiterList","infoStripe","responseData","window","open","getRestaurantList","data","restaurant","err","postParrainage","preventDefault","email","messageParrainage","renderCompteReferent","mangoWalletReferent","href","renderMesRestau","restaurantName","modalUnsubscribe","wallet","stripeUrl","this","Container","Row","Col","sm","md","s","Image","src","picture","roundedCircle","span","offset","firstname","lastname","staff","adress","city","phone","type","onChange","placeholder","xs","lg","classeName","to","Component","Connexion","addLogin","password","token","setItem","userId","setLogin","push","location","buttonText","declineButtonText","expires","enableDeclineButton","onDecline","cookieName","style","background","color","declineButtonStyle","borderRadius","padding","fontSize","fontWeight","buttonStyle","fontfamily","Form","Group","controlId","Control","ClassName","id","Label","Inscription","addNewRegister","acceptControl","success","onSubmit","as","Check","label","required","block","InscriptionParrainage","mesComs","getMesCommentaires","mesCommentaires","renderMesCommentaires","commentaires","prenom","nom","texte","UploadPicture","imageStorage","setImageStorage","setMessage","useEffect","FormData","files","ref","put","on","modifierMonProfil","change","event","serveur","postDataServeur","serveurInfo","object","editserveur","modifProfilLogo","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","invalid","iconColor","CardSection","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","createSubscription","a","customerId","paymentMethodId","priceId","result","subscription","cardElement","getElement","CardElement","createPaymentMethod","card","paymentMethod","disabled","stripePromise","loadStripe","Barremenu","connect","login","fluid","Dropdown","Toggle","alignRight","Menu","Item","clear","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","footer","deleteProfil","modalDelete","Navbar","fixed","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","Link","eventKey","mesHistoriques","Math","round","Date","toLocaleDateString","class","Table","striped","hover","CagnotteCollective","addBankAccount","region","zip","iban","country","Type","payoutMangoPay","messageTransfert","document","getWalletAmount","kycStatut","referent","getReferentWallet","waiter","renderMesServeurs","tabServeur","serveurName","serveurMail","textAlign","kycDocument","checkKyc","enctype","multiple","accept","messageBA","App","exact","path","render","component","ModifierMonProfil","mesHisto","Referent","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.14a2d2d8.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAut6vqnimGfA8-stmTnB-q4tyrXv2aJow\",\n    authDomain: \"tipourboire-57c09.firebaseapp.com\",\n    projectId: \"tipourboire-57c09\",\n    storageBucket: \"tipourboire-57c09.appspot.com\",\n    messagingSenderId: \"592397685193\",\n    appId: \"1:592397685193:web:e6c6a5fca6aeccef5f1818\",\n    measurementId: \"G-5LS7DQYY60\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n  var storage = firebase.storage();\n  export default storage","import React, { Component, useEffect, useState } from \"react\";\r\nimport \"./monProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport storage from \"../firebase\";\r\n\r\nfunction Tuto() {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  /** push */\r\n  return (\r\n    <>\r\n      <Button className=\"buttonTuto\" onClick={handleShow}>\r\n        Etapes obligatoires{\" \"}\r\n        <Button onClick={handleShow} className=\"flecheTuto\">\r\n          {\">\"}\r\n        </Button>\r\n      </Button>\r\n\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        animation={true}\r\n        backdrop=\"static\"\r\n        keyboard={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Rappel d'utilisation</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p className=\"titleTutoServ\">\r\n            Pour que tes clients te reconnaissent & commencent à te donner des\r\n            pourboires,\r\n            <br /> dans ton compte Tipourboire, tu dois:\r\n          </p>\r\n          <p className=\"paraTuto\">\r\n            {\" \"}\r\n            Insérer ta photo en allant dans ton profil\r\n          </p>\r\n          <p className=\"paraTuto\">\r\n            {\" \"}\r\n            Rentrer tes coordonnées bancaires & ta pièce d'identité dans\r\n            l'onglet \"Mes documents\"\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"modalButton\"\r\n            variant=\"secondary\"\r\n            onClick={handleClose}>\r\n            Fermer\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nclass Profil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profil: { restaurant: {} },\r\n      wallet: 1,\r\n      history: [],\r\n      stripeUrl: \"\",\r\n      restaurant: [],\r\n      showModal: false,\r\n    };\r\n  }\r\n\r\n  abonnement = () => {\r\n    let ID = this.state.profil.stripeId;\r\n    console.log(ID);\r\n    if (ID === null) {\r\n      alert(\"vous devez vous abonner pour bénéficier de l'app\");\r\n    }\r\n    return;\r\n  };\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  /*  renderButtonUnSub = () => {\r\n    let abonne = this.state.profil.abonne;\r\n    if (abonne === true) {\r\n      return (\r\n        <Button\r\n          className=\"buttonModifier lienCommentaire\"\r\n          onClick={() => {\r\n            this.setState({ showModal: true });\r\n          }}\r\n        >\r\n          Résilier mon abonnement\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          className=\"buttonModifier lienCommentaire\"\r\n          href=\"/monAbonnement\"\r\n        >\r\n          Souscrire à l'abonnement premium\r\n        </Button>\r\n      );\r\n    }\r\n  };*/\r\n  unSubscribe = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/unsubscribe\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ showModal: false });\r\n          this.getMonProfil();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  renderMesHistory = () => {\r\n    if (Array.isArray(this.state.profil.history)) {\r\n      if (this.state.profil.history.length > 0) {\r\n        return this.state.profil.history.map((element, index) => {\r\n          return (\r\n            <div className={\"historique\"} key={index}>\r\n              <p className={\"pourboire\"}>\r\n                vous avez reçu {element.amount}€ le {element.date}.\r\n              </p>\r\n            </div>\r\n          );\r\n        });\r\n      } else {\r\n        return (\r\n          <p className=\"pourboire\">\r\n            Vous n'avez reçu aucun pourboire pour l'instant.\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  };\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteAffiliation = (e) => {\r\n    const data = {};\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/deleteWaiter\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.getWaiterList();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  infoStripe = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"get\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/customerAccount\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        window.open(responseData, \"_blank\");\r\n      });\r\n  };\r\n  // Récupération des données du serveur / restaurantName\r\n  getRestaurantList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/restaurantList\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ restaurant: data });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n  postParrainage = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/emailParrainage?_id=\" +\r\n        this.state.email +\r\n        \"&mailSender=\" +\r\n        this.state.profil.email,\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ messageParrainage: responseData.message });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n    this.getRestaurantList();\r\n  }\r\n  renderCompteReferent = () => {\r\n    if (this.state.profil.mangoWalletReferent) {\r\n      return (\r\n        <Button className=\"lienCommentaire referentButton\" href=\"/referent\">\r\n          Mon compte Référent\r\n        </Button>\r\n      );\r\n    }\r\n  };\r\n  renderMesRestau = () => {\r\n    if (!this.state.restaurant.length) {\r\n      return (\r\n        <h4 className=\"Nocoms\">\r\n          Vous n'êtes pas encore affilié à un restaurant\r\n        </h4>\r\n      );\r\n    } else {\r\n      return this.state.restaurant.map((element) => {\r\n        return (\r\n          <div className=\"articles\">\r\n            <h4 className=\"titre\">{element.restaurantName}</h4>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n  };\r\n  modalUnsubscribe = () => {\r\n    return (\r\n      <Modal\r\n        show={this.state.showModal}\r\n        onHide={() => {\r\n          this.setState({ showModal: false });\r\n        }}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"modalTitle\">\r\n            Résiliation abonnement\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modalBody\">\r\n          Etes vous sur de vouloir résilier votre abonnement Tipourboire ?{\" \"}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"modalButton\"\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              this.unSubscribe();\r\n            }}>\r\n            Résilier\r\n          </Button>\r\n          <Button\r\n            className=\"modalButton\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.setState({ showModal: false });\r\n            }}>\r\n            Annuler\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"contain parrainage\">\r\n        {/* {this.abonnement()}*/}\r\n        {this.modalUnsubscribe()}\r\n        <Row className=\"mescartes\">\r\n          <Col className=\"mesdetails\" sm={12} md={12}>\r\n            <Col s={6} md={12} className=\"colPhoto\">\r\n              <Image\r\n                className=\"photoProfil\"\r\n                src={\r\n                  \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" +\r\n                  this.state.profil.picture\r\n                }\r\n                roundedCircle\r\n              />\r\n            </Col>\r\n            <Col md={{ span: 9, offset: 7 }} className=\"colTuto\">\r\n              <Tuto />\r\n            </Col>\r\n            <div className=\"infoProfil\">\r\n              <h1>\r\n                {this.state.profil.firstname} {this.state.profil.lastname}\r\n              </h1>\r\n\r\n              <h3 className=\"titreNice\">{this.state.profil.staff}</h3>\r\n              <p className=\"profilPara\">{this.state.profil.adress}</p>\r\n              <p className=\"profilPara\">{this.state.profil.city}</p>\r\n\r\n              <p className=\"profilPara\">{this.state.profil.email} </p>\r\n              <p className=\"profilParafin\">{this.state.profil.phone}</p>\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"monrestaurant\" sm={12} md={12}>\r\n            <h1 className=\"ligne\">Mes restaurants </h1>\r\n            {this.renderMesRestau()}\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"colParrainage\">\r\n            <Col md={12}>\r\n              <label className=\"demandeParrainage\">\r\n                Parrainer un Serveur et/ou Restaurateur\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du parrainé\"\r\n              className=\"inputParrainage\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.postParrainage}\r\n              className=\"buttonParrainage\"\r\n            />\r\n\r\n            <p className=\"infoParrainage\">\r\n              \" Vous êtes satisfaits : parlez-en autour de vous ! A chaque\r\n              parrainage d'un serveur ou d'un restaurateur, vous et votre ami,\r\n              gagnez 2 mois d'abonnements Premium \"\r\n            </p>\r\n            {this.state.messageParrainage}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"rowButton\">\r\n          <Col xs={12} md={6} lg={6}>\r\n            <Button className=\"buttonAbo\" href=\"/mesDocuments\">\r\n              Mes documents\r\n            </Button>\r\n          </Col>\r\n          <Col xs={12} s={12} md={6} lg={6}>\r\n            <Button className=\"buttonAbo\" href=\"/cagnotte\">\r\n              Mes pourboires\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6} lg={6}>\r\n            <Button className=\"buttonModifier lienCommentaire\" href=\"/mesTips\">\r\n              Mes commentaires reçus\r\n            </Button>\r\n          </Col>\r\n          <Col classeName=\"colModifier\" md={6} lg={6}>\r\n            <Link to=\"/modifierMonProfil\" className=\"modif\">\r\n              <button className=\"buttonModifier lienCommentaire\">\r\n                Modifier mon profil\r\n              </button>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowHisto\">\r\n          <Col xs={12} s={12} md={6} lg={6}>\r\n            <Button\r\n              className=\"buttonModifier lienCommentaire\"\r\n              href=\"/mesHistoriques\">\r\n              Mon historique de pourboire\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{this.renderCompteReferent()}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport CookieConsent, { Cookies } from \"react-cookie-consent\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\" };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"token\", responseData.token);\r\n          localStorage.setItem(\"userID\", responseData.userId);\r\n          this.props.setLogin(true);\r\n          this.props.history.push(\"/monprofil\");\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <CookieConsent\r\n          location=\"top\"\r\n          buttonText=\"J'accepte\"\r\n          declineButtonText=\"Je refuse\"\r\n          expires={30}\r\n          enableDeclineButton\r\n          onDecline={() => {\r\n            alert(\r\n              \"Le refus de nos cookies vous permets tout de même une bonne navigation sur notre site. A bientot :)\"\r\n            );\r\n          }}\r\n          cookieName=\"Tipourboire\"\r\n          style={{ background: \"#ffffff\", color: \"#555\" }}\r\n          declineButtonStyle={{\r\n            borderRadius: 12,\r\n            padding: 8,\r\n            color: \"#fff\",\r\n            fontSize: \"18px\",\r\n            background: \"#f5a624\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          buttonStyle={{\r\n            borderRadius: 12,\r\n            padding: 8,\r\n            color: \"#fff\",\r\n            fontSize: \"18px\",\r\n            background: \"#f5a624\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n          style={{\r\n            fontSize: \"20px\",\r\n            fontfamily: \"Montserrat\",\r\n            fontWeight: \"bold\",\r\n          }}\r\n        >\r\n          Le Site Tipourboire utilise différents cookies afin d’améliorer ses\r\n          services et effectuer des suivis d’audience. Certains cookies sont\r\n          indispensables au fonctionnement du Site. Vous pouvez accepter ces\r\n          cookies, les refuser, ou gérer vos préférences. Vous pouvez consulter\r\n          notre{\" \"}\r\n          <a\r\n            href=\"/cookies/POLITIQUE_DE_COOKIES.pdf\"\r\n            target=\"_blank\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              fontfamily: \"Montserrat\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Politique de cookies\r\n          </a>\r\n        </CookieConsent>\r\n        <Row>\r\n          <Col>\r\n            <h1>Déja membre ? </h1>\r\n            <h1>Connectez-vous !</h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre e-mail\"\r\n            id=\"email\"\r\n            onChange={this.handleInput}\r\n            value={this.state.email}\r\n          />\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            ClassName=\"formMail\"\r\n            placeholder=\"Votre mot de passe\"\r\n            id=\"password\"\r\n            onChange={this.handleInput}\r\n            value={this.state.password}\r\n          />\r\n        </Form.Group>\r\n        <Col className=\"colMdp\" xs={12} md={12}>\r\n          <Link className=\"forgetpwd\" to=\"/passwordReset\">\r\n            <p>Mot de passe oublié ?</p>\r\n          </Link>\r\n        </Col>\r\n        <Col md={12} className=\"blocCompte\">\r\n          <Button className=\"connectButton\" onClick={this.addLogin}>\r\n            Se connecter\r\n          </Button>\r\n          <p>{this.state.message}</p>\r\n        </Col>\r\n        <Col className=\"alignRight\">\r\n          <Form.Label className=\"text2\">\r\n            Pas encore membre ?{\" \"}\r\n            <Link className=\"creerCompte\" to=\"/Inscription\">\r\n              Créer mon compte\r\n            </Link>\r\n          </Form.Label>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport \"./inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      city: this.state.city,\r\n      adress: this.state.adress,\r\n      staff: this.state.staff,\r\n      date: this.state.date,\r\n      email: this.state.email,\r\n      phone: this.state.phone,\r\n      password: this.state.password,\r\n      acceptControl: this.state.acceptControl,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/register\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          console.log(responseObject.success);\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"inscr\">\r\n        <Row className=\"RowInscr\">\r\n          <Col md={12} className=\"Titre\" sm={12}>\r\n            <h1 className=\"titreh1\">Créer mon compte </h1>\r\n            <p className=\"Titrep\">\r\n              Merci de remplir les informations ci-dessous pour finaliser la\r\n              création de votre compte.\r\n            </p>\r\n          </Col>\r\n          <Row className=\"centerInscr\">\r\n            <Col md={9}>\r\n              <Form onSubmit={this.addNewRegister}>\r\n                <Form.Group controlId=\"lastname\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Nom\"\r\n                    name=\"lastname\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.lastname}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"firstname\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Prénom\"\r\n                    name=\"firstname\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.firstname}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"date\">\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    placeholder=\"jj/mm/aaaa\"\r\n                    name=\"date\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.date}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"adress\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Adresse\"\r\n                    name=\"adress\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.adress}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"city\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Ville\"\r\n                    name=\"city\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.city}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"phone\">\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Telephone(Facultatif)\"\r\n                    name=\"phone\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.phone}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"staff\">\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    type=\"text\"\r\n                    name=\"staff\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.staff}\r\n                    className=\"tailleInscr\"\r\n                  >\r\n                    <option>-</option>\r\n                    <option>Manager (Pas de bourboire)</option>\r\n                    <option>Commis</option>\r\n                    <option>Chef de rang</option>\r\n                    <option>Maître d'hôtel</option>\r\n                    <option>Barman</option>\r\n                    <option>Cuisinier</option>\r\n                    <option>Accueil</option>\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Control\r\n                    type=\"mail\"\r\n                    placeholder=\"Email \"\r\n                    name=\"email\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.email}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.password}\r\n                    className=\"tailleInscr\"\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                  <Form.Check\r\n                    className=\"checkboxCGU\"\r\n                    type=\"checkbox\"\r\n                    name=\"acceptControl\"\r\n                    label=\"J'ai lu et j'accepte les CGU et CGV\"\r\n                    onChange={this.handleInput}\r\n                    value={this.state.acceptControl}\r\n                    required\r\n                  />\r\n\r\n                  <a\r\n                    className=\"cgvLink\"\r\n                    href=\"/CGV_TIPTOTHANK.pdf\"\r\n                    target=\"_blanck\"\r\n                  >\r\n                    CGU & CGV\r\n                  </a>\r\n                </Form.Group>\r\n                <Row className=\"centerInscr\">\r\n                  <Col md={5} className=\"centerInscr\">\r\n                    <Button\r\n                      className=\"connectServeur\"\r\n                      variant=\"primary\"\r\n                      block\r\n                      type=\"submit\"\r\n                      onClick={() => {\r\n                        if (!this.state.acceptControl) {\r\n                          this.setState({\r\n                            message:\r\n                              \"Veuillez accepter les conditions générales d'utilisations.\",\r\n                          });\r\n                        } else {\r\n                          this.addNewRegister();\r\n                        }\r\n                      }}\r\n                    >\r\n                      S'inscrire\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n\r\n              <p className=\"annonce\">\r\n                *TIPOURBOIRE est responsable du traitement des données\r\n                personnelles collectées sur ce site. Elles sont collectées aux\r\n                fins de : l'exécution du contrat/vous informer de nos nouveautés\r\n                et actualités/à des fins statistiques, les bases légales\r\n                respectives des traitements pouvant être l'exécution du contrat,\r\n                l'intérêt légitime, ou le consentement. Pour plus d'informations\r\n                voir notre politique de confidentialité.\r\n              </p>\r\n              <p>{this.state.message}</p>\r\n            </Col>\r\n          </Row>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import React, { Component, useReducer } from \"react\";\nimport \"./inscriptionParrainage.css\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { Link } from \"react-router-dom\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nclass InscriptionParrainage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  addNewRegister = (e) => {\n    e.preventDefault();\n    const data = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      city: this.state.city,\n      adress: this.state.adress,\n      staff: this.state.staff,\n      date: this.state.date,\n      email: this.state.email,\n      phone: this.state.phone,\n      password: this.state.password,\n      acceptControl: this.state.acceptControl,\n    };\n\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      \"X-Requested-With\": \"XMLHttpRequest\",\n    });\n\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: headers,\n    };\n\n    fetch(\n      \"https://back-end.osc-fr1.scalingo.io/serveur/inscriptionParrainage\",\n      options\n    )\n      .then((response) => {\n        return response.json();\n      })\n\n      .then(\n        (responseObject) => {\n          this.setState({ message: responseObject.message });\n        },\n\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n  render() {\n    return (\n      <Container className=\"inscr\">\n        <Col md={12} className=\"Titre\" sm={12}>\n          <h1 className=\"titreh1\">\n            Vous avez été parrainé, crée votre compte afin de profiter de votre\n            offre.{\" \"}\n          </h1>\n          <p className=\"Titrep\">\n            Merci de remplir les informations ci-dessous pour finaliser la\n            création de votre compte.\n          </p>\n        </Col>\n        <Row className=\"centerInscr\">\n          <Col md={8}>\n            <Form.Group controlId=\"lastname\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Nom\"\n                name=\"lastname\"\n                onChange={this.handleInput}\n                value={this.state.lastname}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"firstname\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Prénom\"\n                name=\"firstname\"\n                onChange={this.handleInput}\n                value={this.state.firstname}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"date\">\n              <Form.Control\n                type=\"date\"\n                placeholder=\"Date de naissance\"\n                name=\"date\"\n                onChange={this.handleInput}\n                value={this.state.date}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"adress\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Adresse\"\n                name=\"adress\"\n                onChange={this.handleInput}\n                value={this.state.adress}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"city\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Ville\"\n                name=\"city\"\n                onChange={this.handleInput}\n                value={this.state.city}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"phone\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Telephone(Facultatif)\"\n                name=\"phone\"\n                onChange={this.handleInput}\n                value={this.state.phone}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"staff\">\n              <Form.Control\n                as=\"select\"\n                type=\"text\"\n                name=\"staff\"\n                onChange={this.handleInput}\n                value={this.state.staff}\n              >\n                <option>-</option>\n                <option>Commis</option>\n                <option>Chef de rang</option>\n                <option>Maître d'hôtel</option>\n                <option>Barman</option>\n                <option>Cuisinier</option>\n                <option>Accueil</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Control\n                type=\"mail\"\n                placeholder=\"Email \"\n                name=\"email\"\n                onChange={this.handleInput}\n                value={this.state.email}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                onChange={this.handleInput}\n                value={this.state.password}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicCheckbox\">\n              <Form.Check\n                className=\"checkboxCGUParrainage\"\n                type=\"checkbox\"\n                name=\"acceptControl\"\n                label=\"J'ai lu et j'accepte les CGU et CGV\"\n                onChange={this.handleInput}\n                value={this.state.acceptControl}\n                required\n              />\n\n              <a\n                className=\"cgvLink\"\n                href=\"/CGV_TIPTOTHANK.pdf\"\n                target=\"_blanck\"\n              >\n                CGU & CGV\n              </a>\n            </Form.Group>\n            <Row className=\"centerInscr\">\n              <Col md={5} className=\"centerInscr\">\n                <Button\n                  className=\"connectServeur\"\n                  variant=\"primary\"\n                  block\n                  type=\"submit\"\n                  onClick={() => {\n                    if (!this.state.acceptControl) {\n                      this.setState({\n                        message:\n                          \"Veuillez accepter les conditions générales d'utilisations.\",\n                      });\n                    } else {\n                      this.addNewRegister();\n                    }\n                  }}\n                >\n                  S'inscrire\n                </Button>\n              </Col>\n            </Row>\n            <p className=\"annonceParrainage\">\n              *TIPOURBOIRE est responsable du traitement des données\n              personnelles collectées sur ce site. Elles sont collectées aux\n              fins de : l'exécution du contrat/vous informer de nos nouveautés\n              et actualités/à des fins statistiques, les bases légales\n              respectives des traitements pouvant être l'exécution du contrat,\n              l'intérêt légitime, ou le consentement. Pour plus d'informations\n              voir notre politique de confidentialité.\n            </p>\n            <p>{this.state.message}</p>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nexport default InscriptionParrainage;\n","import React, { Component } from \"react\";\r\nimport \"./mesTips.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass mesComs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mesComs: { commentaires: [] },\r\n    };\r\n  }\r\n\r\n  getMesCommentaires = () => {\r\n    console.log(\"coucou\");\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mesCommentaires\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const mesCommentaires = responseObject;\r\n\r\n          this.setState({ mesComs: mesCommentaires });\r\n\r\n          console.log(this.state.mesComs);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderMesCommentaires = () => {\r\n    if (!this.state.mesComs.commentaires.length ) {\r\n      return <h4 className=\"Nocoms\">Vous n'avez pas encore de commentaires</h4>;\r\n    }else {\r\n    return this.state.mesComs.commentaires.map((element, index) => (\r\n      <div className=\"divCom\" key={index}>\r\n        <div className=\"nomPrenom\">\r\n          <h2 className=\"prenomCom\">{element.prenom}</h2>{\" \"}\r\n          <h2 className=\"nomCom\">{element.nom} </h2>\r\n        </div>\r\n        <div>\r\n          <p className=\"statut2\">{element.texte}</p>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }};\r\n  \r\n\r\n  componentDidMount() {\r\n    this.getMesCommentaires();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesComs\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className='titreComs'>Mes commentaires</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"commentaireBackground\">\r\n          <Col>{this.renderMesCommentaires()}</Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default mesComs;\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport \"./modifierMonProfil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport storage from \"../firebase\";\r\n\r\nfunction UploadPicture() {\r\n  const [imageStorage, setImageStorage] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const uploadpicture = (e) => {\r\n    if (imageStorage == null) return;\r\n    storage\r\n      .ref(`/PictureServeur/${imageStorage.name}`)\r\n      .put(imageStorage)\r\n\r\n      .on(\"state_changed\", alert(\"Votre logo a bien été enregistré\"), alert);\r\n  };\r\n\r\n  const getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {},\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/editlogo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          setMessage(responseObject.message);\r\n          const headers = new Headers({\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            \"Content-Type\": \"application/json\",\r\n            \"X-Requested-With\": \"XMLHttpRequest\",\r\n          });\r\n\r\n          const options = {\r\n            method: \"GET\",\r\n            headers: headers,\r\n          };\r\n\r\n          fetch(\r\n            \"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\",\r\n            options\r\n          )\r\n            .then((response) => {\r\n              return response.json();\r\n            })\r\n            .then(\r\n              (responseObject) => {\r\n                setImageStorage(responseObject.picture);\r\n              },\r\n\r\n              (error) => {\r\n                console.log(error);\r\n              }\r\n            );\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  useEffect(() => {\r\n    getMonProfil();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={modifProfilLogo} className=\"formLogo\">\r\n        <img\r\n          className=\"serveurPicture\"\r\n          src={\r\n            \"https://s3.amazonaws.com/b.c.bucket.tipourboire/\" + imageStorage\r\n          }\r\n        ></img>\r\n        <br />\r\n        <br />\r\n        <input\r\n          className=\"chargePic\"\r\n          type=\"file\"\r\n          name=\"file\"\r\n          onChange={(e) => {\r\n            setImageStorage(e.target.files[0]);\r\n          }}\r\n        />\r\n        <button className=\"button\" type=\"submit\" onClick={uploadpicture}>\r\n          Télécharger\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass modifierMonProfil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      serveur: {},\r\n    };\r\n  }\r\n\r\n  change = (event) => {\r\n    let serveur = this.state.serveur;\r\n    serveur[event.target.name] = event.target.value;\r\n    this.setState({\r\n      serveur: serveur,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n\r\n  postDataServeur = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n    const data = {\r\n      /*on appel l'userId dans le body en le recuperant du localstorage */\r\n      userId: localStorage.getItem(\"userId\"),\r\n    };\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/dataProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const serveurInfo = responseObject;\r\n          this.setState({ serveur: serveurInfo, object: serveurInfo });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  editserveur = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      serveur: this.state.serveur,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/editlogo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.postDataServeur();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.postDataServeur();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bloc-modifierProfil\">\r\n        <Row>\r\n          <Col md={{ span: 12, offset: 3 }} className=\"titreModif\">\r\n            <p>Modification du profil</p>\r\n\r\n            <Form>\r\n              <Form.Group controlId=\"formGroupName\">\r\n                <Form.Control\r\n                  name=\"lastname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Nom\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.lastname}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formGroupPrenom\">\r\n                <Form.Control\r\n                  name=\"firstname\"\r\n                  type=\"text\"\r\n                  placeholder=\"Prénom\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.firstname}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formAdresse\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Adresse\"\r\n                  name=\"adress\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.adress}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formVille\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ville\"\r\n                  name=\"city\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.city}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formTel\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Telephone(Facultatif)\"\r\n                  name=\"phone\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.phone}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPoste\">\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  type=\"text\"\r\n                  name=\"staff\"\r\n                  onChange={this.change}\r\n                  value={this.state.serveur.staff}\r\n                >\r\n                  <option>-</option>\r\n                  <option>Manager (Pas de bourboire)</option>\r\n                  <option>Commis</option>\r\n                  <option>Chef de rang</option>\r\n                  <option>Maître d'hôtel</option>\r\n                  <option>Barman</option>\r\n                  <option>Cuisinier</option>\r\n                  <option>Accueil</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form>\r\n            <UploadPicture />\r\n\r\n            <Button\r\n              className=\"submitButton\"\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              onClick={this.editserveur}\r\n            >\r\n              Mettre à jour mon profil\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default modifierMonProfil;\r\n","/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSection.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\nclass CardSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>\r\n          Card details\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./checkouForm.css\";\r\nimport CardSection from \"../cardSection/CardSection\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // If a previous payment was attempted, get the latest invoice\r\n    /*const latestInvoicePaymentIntentStatus = localStorage.getItem(\r\n      \"latestInvoicePaymentIntentStatus\"\r\n    );*/\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    if (error) {\r\n      console.log(\"[createPaymentMethod error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      const paymentMethodId = paymentMethod.id;\r\n      const customerId = \"\";\r\n      const priceId = \"\";\r\n      /*if (latestInvoicePaymentIntentStatus === \"requires_payment_method\") {\r\n        // Update the payment method and retry invoice payment\r\n        const invoiceId = localStorage.getItem(\"latestInvoiceId\");\r\n        retryInvoiceWithNewPaymentMethod({\r\n          customerId,\r\n          paymentMethodId,\r\n          invoiceId,\r\n          priceId,\r\n        });\r\n      } else {*/\r\n      /* Create the subscription*/\r\n      createSubscription({ customerId, paymentMethodId, priceId });\r\n    }\r\n    function createSubscription({ customerId, paymentMethodId, priceId }) {\r\n      return (\r\n        fetch(\r\n          \"https://back-end.osc-fr1.scalingo.io/serveur/createsubscription\",\r\n          {\r\n            method: \"post\",\r\n            headers: {\r\n              \"Content-type\": \"application/json\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n              customerId: customerId,\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: \"price_1IGLE1Hoh2Vgz5QdCuVYaQLf\",\r\n            }),\r\n          }\r\n        )\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          // If the card is declined, display an error to the user.\r\n          .then((result) => {\r\n            if (result.error) {\r\n              window.alert(result.message);\r\n              // The card had an error when trying to attach it to a customer.\r\n              throw result;\r\n            }\r\n            return result;\r\n          })\r\n          // Normalize the result to contain the object returned by Stripe.\r\n          // Add the additional details we need.\r\n          .then((result) => {\r\n            window.alert(result.message);\r\n            return {\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: priceId,\r\n              subscription: result,\r\n            };\r\n          })\r\n        // Some payment methods require a customer to be on session\r\n        // to complete the payment process. Check the status of the\r\n        // payment intent to handle these actions.\r\n        /*.then(handlePaymentThatRequiresCustomerAction)\r\n            // If attaching this card to a Customer object succeeds,\r\n            // but attempts to charge the customer fail, you\r\n            // get a requires_payment_method error.\r\n            .then(handleRequiresPaymentMethod)\r\n            // No more actions required. Provision your service for the user.\r\n            .then(onSubscriptionComplete)\r\n            .catch((error) => {\r\n              // An error has happened. Display the failure to the user here.\r\n              // We utilize the HTML element we created.\r\n              showCardError(error);\r\n            })*/\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"coForm\" onSubmit={handleSubmit}>\r\n      <CardSection />\r\n      <Form.Check\r\n        className=\"checkboxRet\"\r\n        type=\"checkbox\"\r\n        name=\"retractation\"\r\n        label=\" Je renonce à mon droit de rétractation d'une durée de 14 jours, afin que le service commence immédiatement. \"\r\n        required\r\n      />\r\n      <button className=\"submitButtonSub\" disabled={!stripe}>\r\n        Devenir un Serveur Premium\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./monAbonnement.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\n\r\nimport CheckoutForm from \"../monAbonnement/checkoutForm\";\r\n\r\n//import \"./monAbonnement.css\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_live_51HAxRlHoh2Vgz5Qdxu3AGz9GC1q2B453vaXplDn3J0Q5wXRCZqwkuoCG5O1Nsr1VsbNIHmjVWj7XJo9cZmljPw7L00wQbxBO6Y\"\r\n);\r\n\r\nclass Abonnement extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"monAbonnement\">\r\n        <Row className=\"infoAbonnement\">\r\n          <Col>\r\n            <h3>Votre abonnement premium serveur TIPOURBOIRE</h3>\r\n            <Elements className=\"cbInput\" stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Abonnement;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./barreMenu.css\";\r\nimport { Row, Container, Col, Dropdown } from \"react-bootstrap\";\r\n\r\nclass Barremenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (this.props.login) {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/images/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/MonProfil\">Profil</Dropdown.Item>\r\n                <Dropdown.Item\r\n                  onClick={() => {\r\n                    localStorage.clear();\r\n                    this.props.setLogin(false);\r\n                    this.props.history.push(\"/\");\r\n                  }}\r\n                  href=\"/\"\r\n                >\r\n                  Déconnexion\r\n                </Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <img src=\"/images/logoJaune.png\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/images/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/inscription\">Inscription</Dropdown.Item>\r\n                <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <img src=\"/images/logoJaune.png\" />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.connect();\r\n    console.log(\"coucou\", this.props.login);\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"barre-de-menu\">{this.connect()}</div>;\r\n  }\r\n}\r\nexport default Barremenu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/password-renew\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"renewPass\">\r\n        <Row>\r\n          <Col className=\"PassRenewCol\" md={12}>\r\n            <h1 className=\"newPass\"> Votre nouveau mot de passe</h1>\r\n            <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Email\"\r\n              />\r\n\r\n              <br />\r\n\r\n              <input\r\n                className=\"inputRenew\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={this.handleInput}\r\n                placeholder=\"Nouveau mot de passe\"\r\n              />\r\n              <br />\r\n              <Button onClick={this.passwordRenew} className=\"renewButton\">\r\n                Valider\r\n              </Button>\r\n            </form>\r\n\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/password-reset\",\r\n      options\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n        <Row>\r\n          <Col className=\"PassResetCol\" md={12}>\r\n            <div className=\"PassResetDiv\">\r\n              <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n              <h1 className=\"titrePass taille\">\r\n                pour réinitialiser votre mot de passe{\" \"}\r\n              </h1>\r\n              <form className=\"formReset\" onSubmit={this.passwordReset}>\r\n                <input\r\n                  className=\"inputReset\"\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  placeholder=\"Email\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"ButtonReset\" md={12}>\r\n            <Button onClick={this.passwordReset} className=\"resetButton\">\r\n              Confirmer\r\n            </Button>\r\n            <p>{this.state.message}</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Modal,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\n\r\nclass footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showModal: false,\r\n    };\r\n  }\r\n\r\n  deleteProfil = (e) => {\r\n    const data = {\r\n      userId:\r\n        localStorage.getItem(\r\n          \"userID\"\r\n        ) /*on get l'Id qu'on a stocké durant la connexion*/,\r\n      /*userID avec le ID en majuscule car c'est comme ca qu'on l'a mis dans le local storage (/connexion) */\r\n      profil: this.state.profil,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        () => {\r\n          let link = \"https://serveur.tipourboire.com/\";\r\n          window.location.href = link;\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  modalDelete = () => {\r\n    return (\r\n      <Modal\r\n        show={this.state.showModal}\r\n        onHide={() => {\r\n          this.setState({ showModal: false });\r\n        }}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title className=\"modalTitle\">Supprimer mon compte</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modalBody\">\r\n          Etes vous sur de vouloir supprimer votre compte Tipourboire ?{\" \"}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"modalButtonDelete\"\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              this.deleteProfil();\r\n            }}\r\n          >\r\n            Supprimer\r\n          </Button>\r\n          <Button\r\n            className=\"modalButtonDelete\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.setState({ showModal: false });\r\n            }}\r\n          >\r\n            Annuler\r\n          </Button>\r\n          {this.state.message}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        {this.modalDelete()}\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @Tipourboire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"/mentionsLegales/mentionsLégales.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Mentions Légales\r\n              </Nav.Link>\r\n              <Nav.Link href=\"/CGV/CGA.pdf\" className=\"textFooter\">\r\n                CGA\r\n              </Nav.Link>\r\n\r\n              <Nav.Link\r\n                href=\"/confidentialité/Politique_de_confidentialité_serveur.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Confidentialité\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"/cookies/POLITIQUE_DE_COOKIES.pdf\"\r\n                className=\"textFooter\"\r\n              >\r\n                Cookies\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                href=\"mailto:contact@tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                Contact\r\n              </Nav.Link>\r\n              <Nav.Link\r\n                className=\"textFooter\"\r\n                onClick={() => this.setState({ showModal: true })}\r\n              >\r\n                Supprimer mon compte\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              {/* <Nav.Link href=\"#deets\" className=\"textFooter\">\r\n                Langues\r\n    </Nav.Link>*/}\r\n              <Nav.Link\r\n                eventKey={2}\r\n                href=\"https://tipourboire.com\"\r\n                className=\"textFooter\"\r\n              >\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default footer;\r\n","import React, { Component } from \"react\";\r\nimport \"./meshistoriques.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass mesHistoriques extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { profil: { restaurantName: {} }, wallet: 1, history: [] };\r\n  }\r\n\r\n  renderMesHistory = () => {\r\n    if (Array.isArray(this.state.profil.history)) {\r\n      if (this.state.profil.history.length > 0) {\r\n        return this.state.profil.history.map((element, index) => {\r\n          return (\r\n            <tr>\r\n              <td type=\"text\" id=\"montant\" name=\"montant\">\r\n                {\" \"}\r\n                {Math.round(element.amount / 10) / 10}€\r\n              </td>\r\n              <td type=\"date\" id=\"date\" name=\"date\">\r\n                {\" \"}\r\n                {new Date(element.date).toLocaleDateString()}\r\n              </td>\r\n            </tr>\r\n          );\r\n        });\r\n      } else {\r\n        return (\r\n          <p className=\"pourboire\">\r\n            Vous n'avez reçu aucun pourboire pour l'instant.\r\n          </p>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n          console.log(this.state.profil);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesHisto\">\r\n        <Row>\r\n          <Col>\r\n            <h1 className=\"titreHisto\">Mon Historique de pourboire</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row class=\"table-responsive-sm\">\r\n          <Table class=\"table-responsive-sm\" striped hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Montant</th>\r\n                <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.renderMesHistory()}</tbody>\r\n          </Table>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default mesHistoriques;\r\n","import { Alert } from \"bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport \"./CagnotteCollective.css\";\r\n\r\nclass CagnotteCollective extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      document: {},\r\n      amount: 0,\r\n      profil: {},\r\n    };\r\n  }\r\n  addBankAccount = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      adress: this.state.adress,\r\n      password: this.state.password,\r\n      city: this.state.city,\r\n      region: this.state.region,\r\n      zip: this.state.zip,\r\n      iban: this.state.iban,\r\n      country: this.state.country,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mangoBank\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        if (responseData.Type === \"param_error\") {\r\n          window.alert(\"Une erreur s'est produite, veuillez réessayer.\");\r\n        } else {\r\n          window.alert(\r\n            \"Votre compte bancaire à bien été enregistré vous pouvez maintenant retirer votre argent.\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  payoutMangoPay = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      adress: this.state.adress,\r\n      password: this.state.password,\r\n      city: this.state.city,\r\n      region: this.state.region,\r\n      zip: this.state.zip,\r\n      iban: this.state.iban,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/payoutMango\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ messageTransfert: responseData.messageTransfert });\r\n      });\r\n  };\r\n\r\n  change = (event) => {\r\n    let document = this.state.document;\r\n    document[event.target.name] = event.target.value;\r\n    this.setState({\r\n      document: document,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  getWalletAmount = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"get\",\r\n\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/getWalet\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ amount: responseData });\r\n      });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let base64 = new FormData(e.target);\r\n\r\n    const data = base64;\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mangoKYC\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((responseData) => {\r\n        if (responseData.Type === \"param_error\") {\r\n          window.alert(\"Une erreur s'est produite, veuillez réessayer.\");\r\n        } else {\r\n          console.log(responseData);\r\n          window.alert(\r\n            \"Vos documents ont bien été envoyés une réponse vous sera fourni dans les 24 heures.\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n          console.log(\"dsqdsqdsqwsxdqsddqsdsq\", this.state.profil.kycStatut);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getWalletAmount();\r\n\r\n    this.getMonProfil();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container className=\"cagnotteCont\">\r\n        <Row className=\"rowCagn\">\r\n          <Col>\r\n            <h1>Montant de vos pourboires :</h1>\r\n            <h2>\r\n              <strong>{this.state.amount / 100} euros</strong>\r\n            </h2>\r\n            <Button onClick={this.payoutMangoPay}>Retirer votre argent</Button>\r\n            <br />\r\n            <p>{this.state.messageTransfert}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"rowPasDeCagn\">\r\n          <Col>\r\n            <h5 className=\"rappelKYC\">\r\n              {\" \"}\r\n              Pas encore de cagnotte pour percevoir vos pourboires ? Suivez les\r\n              étapes dans la partie \"Mes Documents\" !\r\n            </h5>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CagnotteCollective;\r\n","import React, { Component } from \"react\";\r\nimport \"./referent.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\n\r\nclass referent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { waiter: { tabServeur: [] }, referent: [] };\r\n  }\r\n  change = (event) => {\r\n    let referent = this.state.referent;\r\n    referent[event.target.name] = event.target.value;\r\n    this.setState({\r\n      referent: referent,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\r\n    });\r\n  };\r\n  getReferentWallet = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\r\n      \"https://back-end.osc-fr1.scalingo.io/serveur/referentWallet\",\r\n      options\r\n    )\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const amount = responseObject;\r\n          this.setState({ amount: amount });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  getWaiterList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/waiterList\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ waiter: responseObject });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  renderMesServeurs = () => {\r\n    return this.state.waiter.tabServeur.map((element) => {\r\n      return (\r\n        <Col className=\"nameServ\" xs={12} s={12} md={6}>\r\n          <h3>\r\n            <strong>{element.serveurName}</strong>\r\n          </h3>\r\n          <br />\r\n          <Form>\r\n            <Form.Control\r\n              type=\"number\"\r\n              placeholder=\"Montant du transfert\"\r\n              name=\"amount\"\r\n              onChange={this.change}\r\n            />\r\n          </Form>\r\n          <Button\r\n            className=\"CollectButton\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n              const data = {\r\n                email: element.serveurMail,\r\n                amount: this.state.referent.amount,\r\n              };\r\n              const options = {\r\n                method: \"POST\",\r\n                headers: headers,\r\n                body: JSON.stringify(data),\r\n              };\r\n\r\n              fetch(\r\n                \"https://back-end.osc-fr1.scalingo.io/serveur/referentTransfert\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then(\r\n                  (data) => {\r\n                    this.setState({ message: data.message });\r\n                    this.getReferentWallet();\r\n                  },\r\n\r\n                  (error) => {\r\n                    console.log(error);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            Envoyez\r\n          </Button>\r\n        </Col>\r\n      );\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getReferentWallet();\r\n    this.getWaiterList();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"mesHisto\">\r\n        <Row className=\"commentaireHisto\">\r\n          <Col xs={12} s={12} md={12}>\r\n            <h1>Montant du pot commun :</h1>\r\n            <h2 className=\"montantCo\">\r\n              <strong>{this.state.amount / 100} euros</strong>\r\n            </h2>\r\n            <p>\r\n              Les frais de gestion Tipourboire par serveur seront\r\n              automatiquement enlevés de la part que vous lui distribuez \r\n            </p>\r\n            <h1>Liste des Serveurs:</h1>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"rowServeurCo\">{this.renderMesServeurs()}</Row>\r\n        <p style={{ textAlign: \"center\" }}>{this.state.message}</p>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default referent;\r\n","import React, { Component } from \"react\";\nimport { Button, Container, Row, Col } from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./kycDocument.css\";\n\nclass kycDocument extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      document: {},\n      profil: {},\n    };\n  }\n  addBankAccount = (e) => {\n    e.preventDefault();\n    const data = {\n      adress: this.state.adress,\n      password: this.state.password,\n      city: this.state.city,\n      region: this.state.region,\n      zip: this.state.zip,\n      iban: this.state.iban,\n      country: this.state.country,\n    };\n\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      \"X-Requested-With\": \"XMLHttpRequest\",\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n    });\n\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: headers,\n    };\n\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/mangoBank\", options)\n      .then((response) => {\n        return response.json();\n      })\n\n      .then((responseData) => {\n        if (responseData.Type === \"param_error\") {\n          window.alert(\"Une erreur s'est produite, veuillez réessayer.\");\n        } else {\n          window.alert(\n            \"Votre compte bancaire à bien été enregistré vous pouvez maintenant retirer votre argent.\"\n          );\n        }\n      });\n  };\n\n  payoutMangoPay = (e) => {\n    e.preventDefault();\n    const data = {\n      adress: this.state.adress,\n      password: this.state.password,\n      city: this.state.city,\n      region: this.state.region,\n      zip: this.state.zip,\n      iban: this.state.iban,\n    };\n\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      \"X-Requested-With\": \"XMLHttpRequest\",\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n    });\n\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: headers,\n    };\n\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/payoutMango\", options)\n      .then((response) => {\n        return response.json();\n      })\n\n      .then((responseData) => {\n        this.setState({ messageTransfert: responseData.messageTransfert });\n      });\n  };\n\n  change = (event) => {\n    let document = this.state.document;\n    document[event.target.name] = event.target.value;\n    this.setState({\n      document: document,\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input donc necessité d'avoir le bon name!!\n    });\n  };\n  handleInput = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    let base64 = new FormData(e.target);\n\n    const data = base64;\n\n    const headers = new Headers({\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    });\n\n    const options = {\n      method: \"POST\",\n      body: data,\n      headers: headers,\n    };\n\n    fetch(\"https://back-end.osc-fr1.scalingo.io//serveur/mangoKYC\", options)\n      .then((response) => {\n        return response.json();\n      })\n      .then((responseData) => {\n        console.log(\"ezeza\", responseData);\n        if (responseData.success == false) {\n          window.alert(\n            \"Une erreur s'est produite, veuillez réessayer. Pensez à vérifier la/les taille(s) de votre/vos image(s)\"\n          );\n        } else {\n          console.log(responseData);\n          window.alert(\n            \"Vos documents ont bien été envoyés une réponse vous sera fourni dans les 24 heures.\"\n          );\n        }\n      });\n  };\n\n  checkKyc = () => {\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\n    });\n\n    const options = {\n      method: \"get\",\n\n      headers: headers,\n    };\n\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/kyc-statut\", options)\n      .then((response) => {\n        return response.json();\n      })\n\n      .then((responseData) => {});\n  };\n  getMonProfil = () => {\n    const headers = new Headers({\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n      \"Content-Type\": \"application/json\",\n      \"X-Requested-With\": \"XMLHttpRequest\",\n    });\n\n    const options = {\n      method: \"GET\",\n      headers: headers,\n    };\n\n    fetch(\"https://back-end.osc-fr1.scalingo.io/serveur/monProfil\", options)\n      .then((response) => {\n        return response.json();\n      })\n      .then(\n        (responseObject) => {\n          const monProfil = responseObject;\n          this.setState({ profil: monProfil });\n          console.log(\"dsqdsqdsqwsxdqsddqsdsq\", this.state.profil.kycStatut);\n        },\n\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  componentDidMount() {\n    this.checkKyc();\n    this.getMonProfil();\n  }\n  render() {\n    return (\n      <Container className=\"cagnotteCont\">\n        <Row className=\"rowId\">\n          <Col>\n            <div className=\"kyc\">\n              <form onSubmit={this.onSubmit}>\n                <p className=\"titleKyc\">Confirmation d'identité </p>\n                <p>\n                  ( <u>Passeport de préférence</u> sinon Recto Verso sur la même\n                  page, taille minimum: 32 Kb taille maximum: 10Mb )\n                </p>\n                <input\n                  enctype=\"multipart/form-data\"\n                  className=\"chargePic\"\n                  type=\"file\"\n                  name=\"file\"\n                  multiple\n                  accept=\"image/png, image/jpeg, image/jpg, image/pdf\"\n                />\n\n                <Button type=\"submit\">Télécharger</Button>\n              </form>\n              {this.state.message}\n            </div>\n          </Col>\n\n          <div className=\"kycStatut\">\n            <p className=\"kycTitleStatut\">Statut de vos documents:</p>\n            <div className=\"statut\">\n              <p className=\"statutValid\">\n                {this.state.profil.kycStatut === \"VALIDATED\" ? \"Validé\" : \"\"}\n              </p>\n              <p className=\"statutRefused\">\n                {this.state.profil.kycStatut === \"REFUSED\"\n                  ? \" Document refusé veuillez vous assurer que la carte d'identité n'ai pas été retouché et que le recto et le verso soit bien visible sur la même page.\"\n                  : \"\"}\n              </p>\n              <p className=\"statutIn\">\n                {this.state.profil.kycStatut !== \"REFUSED\" &&\n                this.state.profil.kycStatut !== \"VALIDATED\"\n                  ? \"En Cours\"\n                  : \"\"}\n              </p>\n            </div>\n          </div>\n        </Row>\n        <Row>\n          <Col>\n            <Form>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Votre Adresse\"\n                name=\"adress\"\n                onChange={this.handleInput}\n                value={this.state.adress}\n              />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Code Postal\"\n                name=\"zip\"\n                onChange={this.handleInput}\n                value={this.state.zip}\n              />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Ville\"\n                name=\"city\"\n                onChange={this.handleInput}\n                value={this.state.city}\n              />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Votre région, PACA, AQUITAINE, BRETAGNE... \"\n                name=\"region\"\n                onChange={this.handleInput}\n                value={this.state.region}\n              />\n\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Votre IBAN, FRXXXXXXXXXXXXXXXXXX\"\n                name=\"iban\"\n                onChange={this.handleInput}\n                value={this.state.iban}\n              />\n\n              <Form.Control\n                as=\"select\"\n                type=\"text\"\n                name=\"country\"\n                onChange={this.handleInput}\n                value={this.state.country}\n              >\n                <option>FR</option>\n                <option>DE</option>\n                <option>LT</option>\n                <option>GB</option>\n                <option>AT</option>\n                <option>BE</option>\n                <option>BG</option>\n                <option>CY</option>\n                <option>DK</option>\n                <option>ES</option>\n                <option>EE</option>\n                <option>FI</option>\n                <option>GR</option>\n                <option>HU</option>\n                <option>IE</option>\n                <option>IT</option>\n                <option>LV</option>\n                <option>LU</option>\n                <option>MT</option>\n                <option>NL</option>\n                <option>PL</option>\n                <option>PT</option>\n                <option>CZ</option>\n                <option>RO</option>\n                <option>SK</option>\n                <option>SI</option>\n                <option>SE</option>\n              </Form.Control>\n            </Form>\n            <Button\n              className=\"butBankAcc\"\n              type=\"submit\"\n              onClick={this.addBankAccount}\n            >\n              Envoyez vos informations bancaires\n            </Button>\n            <br />\n            <br />\n            {this.state.messageBA}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default kycDocument;\n","import React, { Component } from \"react\";\r\nimport \"../App/App.css\";\r\nimport Profil from \"../monProfil/monProfil\";\r\nimport Connexion from \"../connexion/connexion\";\r\nimport Inscription from \"../inscription/inscription\";\r\nimport InscriptionParrainage from \"../inscriptionParrainage/inscriptionParrainage\";\r\nimport MesTips from \"../mesTips/mesTips\";\r\nimport ModifierMonProfil from \"../modifierMonProfil/modifierMonProfil\";\r\nimport monAbonnement from \"../monAbonnement/monAbonnement\";\r\nimport Barremenu from \"../../Assets/barreMenu\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\nimport Footer from \"../../Assets/footer\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport CardSection from \"../cardSection/CardSection\";\r\nimport mesComs from \"../mesTips/mesTips\";\r\nimport mesHisto from \"../MesHistoriques/mesHistoriques\";\r\nimport CagnotteCollective from \"../CagnotteCollective/CagnotteCollective\";\r\nimport Referent from \"../Referent/referent\";\r\nimport kycDocument from \"../KycDocument/kycDocument\";\r\n\r\n/* Main app component*/\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"main-container\">\r\n          <Barremenu setLogin={this.setLogin} login={this.state.login} />\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/inscription\" component={Inscription} />\r\n            <Route\r\n              path=\"/inscriptionParrainage\"\r\n              component={InscriptionParrainage}\r\n            />\r\n            <Route path=\"/mesDocuments\" component={kycDocument} />\r\n            <Route path=\"/monProfil\" component={Profil} />\r\n            <Route path=\"/modifierMonProfil\" component={ModifierMonProfil} />\r\n            <Route path=\"/mesTips\" component={mesComs} />\r\n            <Route path=\"/mesHistoriques\" component={mesHisto} />\r\n            {/*<Route path=\"/monAbonnement\" component={monAbonnement} />*/}\r\n            <Route path=\"/passwordReset\" component={PasswordReset} />\r\n            <Route path=\"/passwordRenew\" component={PasswordRenew} />\r\n            <Route path=\"/cagnotte\" component={CagnotteCollective} />\r\n            <Route path=\"/referent\" component={Referent} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}